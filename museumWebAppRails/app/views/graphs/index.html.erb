
<p id="notice"><%= notice %></p>

<script src="application.js"></script>

<h1>Graph</h1>
<div align="right"><p>Download Button Below</p></div>

<div id="graph">

  <p hidden><%= values = Reading.select(:recorded_at, :temperature, :humidity).where(pin: 4).to_a%></p>

  <p hidden><%=
      tempValues = Array.new

      values.each do |tuple|
        newReading = [tuple.recorded_at, tuple.temperature]

        tempValues.push(newReading)
      end
  %></p>

  <p hidden><%=
      humValues = Array.new

      values.each do |tuple|
        newReading = [tuple.recorded_at, tuple.humidity]

        humValues.push(newReading)
      end
  %></p>

  <p hidden><%=
      startPeriod = DateTime.new(2017, 1, 22)
      endPeriod = DateTime.new(2017, 1, 26)

      selectDays = Reading.select(:recorded_at, :temperature, :humidity).where(pin: 4, recorded_at: startPeriod.beginning_of_day..endPeriod.end_of_day).to_a

      selectDaysArray = Array.new

      selectDays.each do |tuple|
        newReading = [tuple.recorded_at, tuple.temperature]
        selectDaysArray.push(newReading)
      end
  %></p>

  <%=
      line_chart selectDaysArray,
      title: "Allocated Start/End Date",
      xtitle: "Time",
      ytitle: "Temperature (F)",
      legend: true,
      legend: "bottom",
      download: true      
  %>

  <%= line_chart tempValues,
  		title: "Daily Measurement",
  		xtitle: "Time",
  		ytitle: "Temperature (F)",
  		legend: true,
  		legend: "bottom",
  		download: true
   %>

  <%= line_chart humValues,
      title: "Daily Measurement",
      xtitle: "Time",
      ytitle: "Humidity (%)",
      legend: true,
      legend: "bottom",
      download: true
   %>

   <%=

      tempAndHumValues = [
        {
          :name => "Temp",
          :data => tempValues
          },
        {
          :name => "Hum",
          :data => humValues
          }
        ]

      line_chart tempAndHumValues,
      title: "Temperature AND Humidity",
      xtitle: "Time",
      ytitle: "Temperature & Humidity (respectively)",
      legend: true,
      legend: "bottom",
      download: true

   %>

   <%=

    sensorOne = Reading.select(:recorded_at, :temperature, :humidity).where(pin: 1).to_a
    sensorTwo = Reading.select(:recorded_at, :temperature, :humidity).where(pin: 6).to_a

    tempArrayOne = Array.new
    tempArrayTwo = Array.new

    sensorOne.each do |tuple|
        newReading = [tuple.recorded_at, tuple.temperature]
        tempArrayOne.push(newReading)       
    end

    sensorTwo.each do |tuple|
        newReading = [tuple.recorded_at, tuple.temperature]
        tempArrayTwo.push(newReading)       
    end

    doubleData = [
      {
        :name => 1,
        :data => tempArrayOne
      },
      {
        :name => 2,
        :data => tempArrayTwo
      }
    ]

    line_chart doubleData,
    title: "Inside/Outside Temps",
    xtitle: "Time",
    ytitle: "Temperature (F)",
    legend: true,
    legend: "bottom",
    download: true
   %>

   <%=

    # multiSensorHash = {}
    # Sensors we are getting data for
    sensors = [1,2,3,5,6,7]
    # Where we're storing the data for the graph
    # An array of hashes
    multiSensorArray = []

    for sensor in sensors do


      # One data series
      newHash = {}
      # The name of the series
      newHash[:name] = sensor
      # The juicy data
      data = Reading.select(:recorded_at, :temperature, :humidity).where(pin: sensor).to_a
      # Where we'll store the data
      dataArray = Array.new
      # Format it
      data.each do |tuple|

        newReading = [tuple.recorded_at, tuple.temperature]
        dataArray.push(newReading)       

      end
      # Store the formatted data in the hash
      newHash[:data] = dataArray
      # Add this data series
      multiSensorArray.push(newHash)

    end

    line_chart multiSensorArray,
    title: "Plural Sensors",
    xtitle: "Time",
    ytitle: "Temperature (F)",
    legend: true,
    legend: "bottom",
    download: true

   %>

</div>

